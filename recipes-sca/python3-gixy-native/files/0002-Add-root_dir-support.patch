From 59281a0c1f9c72327e016f9dd2a0fd7c7e15369f Mon Sep 17 00:00:00 2001
From: Konrad Weihmann <kweihmann@outlook.com>
Date: Wed, 13 Mar 2019 09:14:33 +0100
Subject: [PATCH 2/2] Add root_dir support

---
 gixy/cli/main.py              | 11 +++++++++--
 gixy/core/config.py           |  4 +++-
 gixy/core/manager.py          |  2 +-
 gixy/parser/nginx_parser.py   | 15 ++++++++++++---
 gixy/plugins/host_spoofing.py |  9 ++++++++-
 5 files changed, 33 insertions(+), 8 deletions(-)

diff --git a/gixy/cli/main.py b/gixy/cli/main.py
index a1120d2..8b74eb6 100644
--- a/gixy/cli/main.py
+++ b/gixy/cli/main.py
@@ -73,6 +73,9 @@ def _get_cli_parser():
         '--disable-includes', dest='disable_includes', action='store_true', default=False,
         help='Disable "include" directive processing')
 
+    parser.add_argument(
+        '--root-dir', dest='root_dir', default="/", help='Root Dir')
+
     group = parser.add_argument_group('plugins options')
     for plugin_cls in PluginsManager().plugins_classes:
         name = plugin_cls.__name__
@@ -98,7 +101,7 @@ def main():
     _init_logger(args.debug)
 
     if len(args.nginx_files) == 1 and args.nginx_files[0] != '-':
-        path = os.path.expanduser(args.nginx_files[0])
+        path = os.path.expanduser([os.path.join(args.root_dir, x[1:]) for x in args.nginx_files][0])
         if not os.path.exists(path):
             sys.stderr.write('File {path!r} was not found.\nPlease specify correct path to configuration.\n'.format(
                 path=path))
@@ -126,7 +129,8 @@ def main():
         output_file=args.output_file,
         plugins=tests,
         skips=skips,
-        allow_includes=not args.disable_includes
+        allow_includes=not args.disable_includes,
+        root_dir=os.path.abspath(args.root_dir)
     )
 
     for plugin_cls in PluginsManager().plugins_classes:
@@ -154,6 +158,9 @@ def main():
     failed = False
     for input_path in args.nginx_files:
         path = os.path.abspath(os.path.expanduser(input_path))
+        if os.path.isabs(path):
+            path = path.lstrip("/")
+        path = os.path.join(config.root_dir, path)
         if not os.path.exists(path):
             LOG.error('File %s was not found', path)
             continue
diff --git a/gixy/core/config.py b/gixy/core/config.py
index ab217f8..b2d6bbd 100644
--- a/gixy/core/config.py
+++ b/gixy/core/config.py
@@ -8,7 +8,8 @@ class Config(object):
                  severity=gixy.severity.UNSPECIFIED,
                  output_format=None,
                  output_file=None,
-                 allow_includes=True):
+                 allow_includes=True,
+                 root_dir="/"):
         self.severity = severity
         self.output_format = output_format
         self.output_file = output_file
@@ -16,6 +17,7 @@ class Config(object):
         self.skips = skips
         self.allow_includes = allow_includes
         self.plugins_options = {}
+        self.root_dir = root_dir
 
     def set_for(self, name, options):
         self.plugins_options[name] = options
diff --git a/gixy/core/manager.py b/gixy/core/manager.py
index c6d98d2..441923d 100644
--- a/gixy/core/manager.py
+++ b/gixy/core/manager.py
@@ -20,7 +20,7 @@ class Manager(object):
         LOG.debug("Audit config file: {fname}".format(fname=file_path))
         parser = NginxParser(
             cwd=os.path.dirname(file_path) if not is_stdin else '',
-            allow_includes=self.config.allow_includes)
+            allow_includes=self.config.allow_includes, root_dir=self.config.root_dir)
         self.root = parser.parse(content=file_data.read(), path_info=file_path)
 
         push_context(self.root)
diff --git a/gixy/parser/nginx_parser.py b/gixy/parser/nginx_parser.py
index 039b134..d3e4d8b 100644
--- a/gixy/parser/nginx_parser.py
+++ b/gixy/parser/nginx_parser.py
@@ -13,11 +13,12 @@ LOG = logging.getLogger(__name__)
 
 
 class NginxParser(object):
-    def __init__(self, cwd='', allow_includes=True):
+    def __init__(self, cwd='', allow_includes=True, root_dir="/"):
         self.cwd = cwd
         self.configs = {}
         self.is_dump = False
         self.allow_includes = allow_includes
+        self.root_dir = root_dir
         self.directives = {}
         self.parser = raw_parser.RawParser()
         self._init_directives()
@@ -109,7 +110,11 @@ class NginxParser(object):
         return self._resolve_file_include(pattern=pattern, parent=parent)
 
     def _resolve_file_include(self, pattern, parent):
-        path = os.path.join(self.cwd, pattern)
+        _cwd = os.path.relpath(self.cwd, self.root_dir)
+        if os.path.isabs(pattern):
+            pattern = pattern.lstrip("/")
+            _cwd = ""
+        path = os.path.join(self.root_dir, _cwd, pattern)
         exists = False
         for file_path in glob.iglob(path):
             if not os.path.exists(file_path):
@@ -123,7 +128,11 @@ class NginxParser(object):
             LOG.warning('File not found: {0}'.format(path))
 
     def _resolve_dump_include(self, pattern, parent):
-        path = os.path.join(self.cwd, pattern)
+        _cwd = os.path.relpath(self.cwd, self.root_dir)
+        if os.path.isabs(pattern):
+            pattern = pattern.lstrip("/")
+            _cwd = ""
+        path = os.path.join(self.root_dir, _cwd, pattern)
         founded = False
         for file_path, parsed in self.configs.items():
             if fnmatch.fnmatch(file_path, path):
diff --git a/gixy/plugins/host_spoofing.py b/gixy/plugins/host_spoofing.py
index 778ae9a..92dce22 100644
--- a/gixy/plugins/host_spoofing.py
+++ b/gixy/plugins/host_spoofing.py
@@ -1,5 +1,8 @@
 import gixy
 from gixy.plugins.plugin import Plugin
+import logging
+
+LOG = logging.getLogger(__name__)
 
 
 class host_spoofing(Plugin):
@@ -14,7 +17,11 @@ class host_spoofing(Plugin):
     directives = ['proxy_set_header']
 
     def audit(self, directive):
-        name, value = directive.args
+        try:
+            name, value = directive.args
+        except ValueError:
+            name = directive.args[0]
+            value = ""
         if name.lower() != 'host':
             # Not a "Host" header
             return
-- 
2.7.4

