From 4d9fa3239721c1d86bca2a5b34d89b4917918854 Mon Sep 17 00:00:00 2001
From: Konrad Weihmann <kweihmann@outlook.com>
Date: Sat, 1 Feb 2020 15:45:56 +0100
Subject: [PATCH 2/2] waf: add support of cross_compile

After upgrade, waf also upgraded

on 1.5.19, for cross_compile, subprocess.Popen is set to be
samba_cross.cross_Popen, which will not execute testprog on
host, but only read result from cross-answers.txt which is
passed by option --cross-answer

part of old code:
    args = Utils.to_list(kw.get('exec_args', []))
    proc = Utils.pproc.Popen([lastprog] + args, stdout=Utils.pproc.PIPE, stderr=Utils.pproc.PIPE)

but on new version, exec_args is not used and cause do_configure
failed with Exec format error

fixed by append cross anser related args to cmd

Upstream-Status: Submitted [https://gitlab.com/samba-team/samba/merge_requests/211]

Signed-off-by: Changqing Li <changqing.li@windriver.com>

Ported to version 2.3.1
Signed-off-by: Konrad Weihmann <kweihmann@outlook.com>
---
 third_party/waf/waflib/Tools/c_config.py | 11 ++++++-----
 1 file changed, 6 insertions(+), 5 deletions(-)

diff --git a/third_party/waf/waflib/Tools/c_config.py b/third_party/waf/waflib/Tools/c_config.py
index 80580cc..828141c 100644
--- a/third_party/waf/waflib/Tools/c_config.py
+++ b/third_party/waf/waflib/Tools/c_config.py
@@ -659,21 +659,22 @@ class test_exec(Task.Task):
 	"""
 	color = 'PINK'
 	def run(self):
+		args = self.generator.bld.kw.get('exec_args', [])
 		cmd = [self.inputs[0].abspath()] + getattr(self.generator, 'test_args', [])
 		if getattr(self.generator, 'rpath', None):
 			if getattr(self.generator, 'define_ret', False):
-				self.generator.bld.retval = self.generator.bld.cmd_and_log(cmd)
-			else:
-				self.generator.bld.retval = self.generator.bld.exec_command(cmd)
+				self.generator.bld.retval = self.generator.bld.cmd_and_log([self.inputs[0].abspath()] + args)
+			else: 
+				self.generator.bld.retval = self.generator.bld.exec_command([self.inputs[0].abspath()] + args)
 		else:
 			env = self.env.env or {}
 			env.update(dict(os.environ))
 			for var in ('LD_LIBRARY_PATH', 'DYLD_LIBRARY_PATH', 'PATH'):
 				env[var] = self.inputs[0].parent.abspath() + os.path.pathsep + env.get(var, '')
 			if getattr(self.generator, 'define_ret', False):
-				self.generator.bld.retval = self.generator.bld.cmd_and_log(cmd, env=env)
+				self.generator.bld.retval = self.generator.bld.cmd_and_log([self.inputs[0].abspath()] + args, env=env)
 			else:
-				self.generator.bld.retval = self.generator.bld.exec_command(cmd, env=env)
+				self.generator.bld.retval = self.generator.bld.exec_command([self.inputs[0].abspath()] + args, env=env)
 
 @feature('test_exec')
 @after_method('apply_link')
-- 
2.20.1

